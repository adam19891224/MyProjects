<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd">
  
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
	  <property name="securityManager" ref="securityManager" />
	  <property name="loginUrl" value="/login.html" /><!-- 登陆时的连接 -->
	  <!-- <property name="successUrl" value="/main.html" /> --><!-- 登陆成功连接，可以不用写，这里注释掉的原因是因为在login中，我们直接return到main.html了，所以不需要这里配置 -->
	  <property name="unauthorizedUrl" value="/error.html" />
	  <!--<property name="filters">-->
	    <!--<map>-->
	      <!--<entry key="authc" value-ref="shiro"></entry>-->
	    <!--</map>-->
	  <!--</property>-->
	  <property name="filterChainDefinitions">
	    <value>
	    	<!-- 
	    		关于下面的配置，anon是shiro自带的权限，空权限，表示这个权限对应的资源不需要进行权限认证
	    		而authc也是shiro的权限，但是这个权限就表示它前面的资源需要进行权限认证，并且如果后面有参数，则表示这个资源不仅要认证，还需要有对应的权限资格才行
	    	 -->
	         /login.html=anon
	         /error.html=anon
	         /register.html=anon
	         /toRegister.html=anon
	         /logout.html=anon
	         /notfound.html=anon
	         /main.html=authc,perms[user]
	         /applications/**=authc,perms[user]
	         /manager/**=authc,perms[admin,user]
		</value>
	  </property>
	</bean>
	
	<!--<bean id="shiro" class="com.system.shiro.filter.ShiroFilter" />-->
	
	<bean id="shiroRealm" class="com.system.shiro.realm.ShiroRealm" />
	
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
	  <property name="realm" ref="shiroRealm" />
	  <!-- 需要使用cache的话加上这句
	  <property name="cacheManager" ref="shiroEhcacheManager" />
	   -->
	</bean>
	
	<!-- 用户授权信息Cache, 采用EhCache，需要的话就配置上此信息 
	<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
	  <property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml" />
	</bean>
	-->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	
	<!-- 下面是采用的cglib代理技术，这种技术导致我们在service中用@service会报错，所以注释掉 -->
	<!-- <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
    	<property name="proxyTargetClass" value="true" />
  	</bean>
 	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    	<property name="securityManager" ref="securityManager" />
  	</bean> -->
</beans>