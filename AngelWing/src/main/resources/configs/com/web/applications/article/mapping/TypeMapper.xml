<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.web.applications.article.dao.TypeMapper" >
  <resultMap id="BaseResultMap" type="com.web.applications.article.entity.Type" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="TYPE_SID" property="typeSid" jdbcType="INTEGER" />
    <result column="TYPE_ID" property="typeId" jdbcType="VARCHAR" />
    <result column="TYPE_NAME" property="typeName" jdbcType="VARCHAR" />
    <result column="TYPE_PARENT_ID" property="typeParentId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    TYPE_SID, TYPE_ID, TYPE_NAME, TYPE_PARENT_ID
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from tb_type
    where TYPE_SID = #{typeSid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tb_type
    where TYPE_SID = #{typeSid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.web.applications.article.entity.Type" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tb_type (TYPE_SID, TYPE_ID, TYPE_NAME, 
      TYPE_PARENT_ID)
    values (#{typeSid,jdbcType=INTEGER}, #{typeId,jdbcType=VARCHAR}, #{typeName,jdbcType=VARCHAR}, 
      #{typeParentId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.web.applications.article.entity.Type" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tb_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="typeSid != null" >
        TYPE_SID,
      </if>
      <if test="typeId != null" >
        TYPE_ID,
      </if>
      <if test="typeName != null" >
        TYPE_NAME,
      </if>
      <if test="typeParentId != null" >
        TYPE_PARENT_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="typeSid != null" >
        #{typeSid,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="typeName != null" >
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="typeParentId != null" >
        #{typeParentId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.web.applications.article.entity.Type" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_type
    <set >
      <if test="typeName != null" >
        TYPE_NAME = #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="typeParentId != null" >
        TYPE_PARENT_ID = #{typeParentId,jdbcType=VARCHAR},
      </if>
    </set>
    where TYPE_ID = #{typeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.web.applications.article.entity.Type" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_type
    set TYPE_ID = #{typeId,jdbcType=VARCHAR},
      TYPE_NAME = #{typeName,jdbcType=VARCHAR},
      TYPE_PARENT_ID = #{typeParentId,jdbcType=VARCHAR}
    where TYPE_SID = #{typeSid,jdbcType=INTEGER}
  </update>

  <!-- 查询分页 -->
  <select id="selectByPage" parameterType="com.system.webui.Page" resultMap="BaseResultMap">
    select
      tt.*
    from tb_type tt
    <where>
      <if test="stringParam1 != null">
        and tt.TYPE_NAME LIKE concat('%',#stringParam1 #,'%')
      </if>
    </where>
    limit #{pageNumber}, #{pageSize}
  </select>

  <!-- 得到总页数 -->
  <select id="getCounts" parameterType="com.system.webui.Page" resultType="java.lang.Integer">
    select
      count(tt.TYPE_ID)
    from tb_type tt
    <where>
      <if test="stringParam1 != null">
        and tt.TYPE_NAME LIKE concat('%',#stringParam1 #,'%')
      </if>
    </where>
  </select>


  <delete id="deleteByPrimaryId" parameterType="java.lang.String">
    delete from tb_type
    where TYPE_ID = #{typeid,jdbcType=VARCHAR}
  </delete>


  <select id="selectTree" resultMap="BaseResultMap" parameterType="java.util.Map">
    SELECT
      tt.TYPE_ID,
      tt.TYPE_NAME,
      tt.TYPE_PARENT_ID
    FROM
      tb_type tt
    <where>
      <if test="noParent != null">
        and tt.TYPE_PARENT_ID IS NULL
      </if>
      <if test="parentId != null">
        and tt.TYPE_PARENT_ID = #{parentId}
      </if>
    </where>
  </select>


  <resultMap id="TreeMap" type="com.system.webui.Tree" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="TYPE_ID" property="id" jdbcType="VARCHAR" />
    <result column="TYPE_NAME" property="text" jdbcType="VARCHAR" />
    <result column="TYPE_PARENT_ID" property="parentId" jdbcType="VARCHAR" />
    <!--<association column="TYPE_PARENT_ID" property="parentId" select="selectParentTree" ></association>-->
    <collection column="TYPE_ID" property="children" ofType="com.system.webui.Tree" javaType="java.util.List" select="selectChildTree" ></collection>
  </resultMap>

  <select id="selectToTree" resultMap="TreeMap">
    SELECT
      tt.TYPE_ID,
      tt.TYPE_NAME,
      tt.TYPE_PARENT_ID
    FROM
      tb_type tt
    WHERE
      tt.TYPE_PARENT_ID IS NULL
  </select>

  <select id="selectParentTree" resultMap="TreeMap">
    SELECT
    tt.TYPE_ID,
    tt.TYPE_NAME,
    tt.TYPE_PARENT_ID
    FROM
    tb_type tt
    WHERE
    tt.TYPE_ID = #{TYPE_PARENT_ID}
  </select>

  <select id="selectChildTree" resultMap="TreeMap">
    SELECT
    tt.TYPE_ID,
    tt.TYPE_NAME,
    tt.TYPE_PARENT_ID
    FROM
    tb_type tt
    WHERE
    tt.TYPE_PARENT_ID = #{TYPE_ID}
  </select>

</mapper>